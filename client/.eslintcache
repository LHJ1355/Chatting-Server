[{"C:\\Users\\LEE\\Desktop\\chat\\client\\src\\index.js":"1","C:\\Users\\LEE\\Desktop\\chat\\client\\src\\App.js":"2","C:\\Users\\LEE\\Desktop\\chat\\client\\src\\_reducers\\index.js":"3","C:\\Users\\LEE\\Desktop\\chat\\client\\src\\_reducers\\user_reducer.js":"4","C:\\Users\\LEE\\Desktop\\chat\\client\\src\\_actions\\user_action.js":"5","C:\\Users\\LEE\\Desktop\\chat\\client\\src\\components\\Signup.js":"6","C:\\Users\\LEE\\Desktop\\chat\\client\\src\\components\\MainPage.js":"7","C:\\Users\\LEE\\Desktop\\chat\\client\\src\\components\\Login.js":"8","C:\\Users\\LEE\\Desktop\\chat\\client\\src\\components\\NavBar\\NavBar.js":"9","C:\\Users\\LEE\\Desktop\\chat\\client\\src\\components\\hoc\\auth.js":"10","C:\\Users\\LEE\\Desktop\\chat\\client\\src\\components\\CreateRoomPage.js":"11","C:\\Users\\LEE\\Desktop\\chat\\client\\src\\components\\ChatRoomPage.js":"12","C:\\Users\\LEE\\Desktop\\chat\\client\\src\\components\\FaceChatPage.js":"13"},{"size":750,"mtime":1607412340582,"results":"14","hashOfConfig":"15"},{"size":1007,"mtime":1608113401857,"results":"16","hashOfConfig":"15"},{"size":163,"mtime":1607411702558,"results":"17","hashOfConfig":"15"},{"size":260,"mtime":1607412528733,"results":"18","hashOfConfig":"15"},{"size":388,"mtime":1607418111736,"results":"19","hashOfConfig":"15"},{"size":2181,"mtime":1607691326729,"results":"20","hashOfConfig":"15"},{"size":725,"mtime":1608113396908,"results":"21","hashOfConfig":"15"},{"size":1533,"mtime":1607501567826,"results":"22","hashOfConfig":"15"},{"size":1514,"mtime":1607504937834,"results":"23","hashOfConfig":"15"},{"size":1285,"mtime":1607671525628,"results":"24","hashOfConfig":"15"},{"size":1153,"mtime":1607691542188,"results":"25","hashOfConfig":"15"},{"size":3553,"mtime":1608464594159,"results":"26","hashOfConfig":"15"},{"size":5606,"mtime":1609227457311,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ywldf",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\LEE\\Desktop\\chat\\client\\src\\index.js",[],["60","61"],"C:\\Users\\LEE\\Desktop\\chat\\client\\src\\App.js",[],"C:\\Users\\LEE\\Desktop\\chat\\client\\src\\_reducers\\index.js",[],"C:\\Users\\LEE\\Desktop\\chat\\client\\src\\_reducers\\user_reducer.js",["62"],"function userReducer(state={}, action){\r\n    switch(action.type){\r\n        case 'AUTH_USER' : \r\n            return {...state, authInfo : action.payload }\r\n            break;\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","C:\\Users\\LEE\\Desktop\\chat\\client\\src\\_actions\\user_action.js",[],"C:\\Users\\LEE\\Desktop\\chat\\client\\src\\components\\Signup.js",[],"C:\\Users\\LEE\\Desktop\\chat\\client\\src\\components\\MainPage.js",["63","64"],"import { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction MainPage(props){\r\n    const [Rooms, setRooms] = useState([]);\r\n\r\n    useEffect(() => {\r\n        console.log('a');\r\n        axios.get(\"/all_rooms\")\r\n        .then((res) => {\r\n            setRooms([...res.data]);\r\n        })\r\n    }, []);\r\n\r\n    return(<div>\r\n        {Rooms && Rooms.map((room, index) => {\r\n            return (<div>\r\n                    <Link to={`/room/${room.id}`}><label>{index}</label>{room.name}</Link>\r\n                </div>)\r\n        })}\r\n        <button><Link to=\"/create_room\">방 만들기</Link></button>\r\n\r\n    </div>)\r\n}\r\n\r\nexport default MainPage;","C:\\Users\\LEE\\Desktop\\chat\\client\\src\\components\\Login.js",[],"C:\\Users\\LEE\\Desktop\\chat\\client\\src\\components\\NavBar\\NavBar.js",["65"],"import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {withRouter, Link} from 'react-router-dom';\r\nimport {Navbar, Nav, Form, FormControl, Button} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction NavFunc(props){\r\n  const user = useSelector(state => state.user)\r\n\r\n  const logoutHandler = () => {\r\n      if(window.localStorage.getItem('token')) window.localStorage.removeItem('token');\r\n        props.history.push(\"/login\");\r\n  };\r\n\r\n  return(\r\n    <div className=\"nav_bar\">\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"#home\">Home</Nav.Link>\r\n          <Nav.Link href=\"#features\">Features</Nav.Link>\r\n          <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n        </Nav>\r\n        <Form inline>\r\n          {/*<FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n          <Button variant=\"outline-info\">Search</Button>*/}\r\n          {user.authInfo && user.authInfo.auth ?\r\n            <Button variant=\"outline-info\" onClick={logoutHandler}> 로그아웃 </Button> : \r\n            <React.Fragment>\r\n              <Button variant=\"outline-info\"> <Link to=\"/login\">로그인</Link> </Button>  \r\n              <Button variant=\"outline-info\"> <Link to=\"/signup\">회원가입</Link> </Button>\r\n            </React.Fragment>\r\n          }\r\n        </Form>\r\n      </Navbar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(NavFunc);","C:\\Users\\LEE\\Desktop\\chat\\client\\src\\components\\hoc\\auth.js",["66"],"import React, {useEffect} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {auth} from '../../_actions/user_action'\r\n\r\nfunction Authentication (SpecificComponent, option, adminRoute = null){\r\n    //option\r\n    //null = 아무나 출입가능\r\n    //true = 로그인 한 유저만 출입가능\r\n    //false = 로그인 하지 않은 유저만 출입가능\r\n    function AuthenticationCheck(props){\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            dispatch(auth())\r\n            .then(res => {\r\n                //로그인 하지 않은 상태\r\n                console.log(res.payload);\r\n                if(!res.payload.auth){\r\n                    if(option){\r\n                        props.history.push('/login');\r\n                    }\r\n                }else {   //로그인 한 상태\r\n                    \r\n                    if(option === false){\r\n                        props.history.push('/');\r\n                    }\r\n                    if(adminRoute && !res.payload.isAdmin){\r\n                        props.history.push('/');\r\n                    }\r\n                }\r\n            })\r\n        }, [])\r\n\r\n        return <SpecificComponent {...props}/>\r\n    }\r\n\r\n    return AuthenticationCheck;\r\n}\r\n\r\nexport default Authentication;","C:\\Users\\LEE\\Desktop\\chat\\client\\src\\components\\CreateRoomPage.js",[],"C:\\Users\\LEE\\Desktop\\chat\\client\\src\\components\\ChatRoomPage.js",["67","68","69","70"],"import React, {useState, useEffect, useRef } from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport SockJsClient from 'react-stomp';\r\nimport {InputGroup, FormControl, Button} from 'react-bootstrap';\r\nimport SockJS from 'sockjs-client';\r\nimport Stomp from 'stompjs';\r\n\r\nfunction ChatRoom(props){\r\n    const user = useSelector(state => state.user)\r\n    const room_id = props.match.params.room_id;\r\n    let socket = new SockJS(\"http://localhost:8080/chat\");\r\n    let stompClient = Stomp.over(socket);\r\n\r\n    const [Chat, setChat] = useState('');\r\n    const [Users, setUser] = useState([]);\r\n    const [ChatList, setChatList] = useState([]);\r\n        \r\n    const onChatHandler = (event) => {\r\n        setChat(event.currentTarget.value);\r\n    }\r\n    \r\n    const onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        sendMessage(\"Message\");\r\n        setChat('');\r\n    }\r\n\r\n    const onMessageHandler = (data) => {\r\n        let msgInfo = JSON.parse(data.body);\r\n        if(msgInfo.msg_type === 'Enter'){\r\n            setUser((prev) => [...prev, {id : msgInfo.user_id, name : msgInfo.user_name}]);\r\n        }\r\n        if(msgInfo.msg_type === 'Exit'){\r\n            setUser((prev) => prev.filter((u) => u.id !== user.authInfo.id));\r\n        }\r\n        setChatList((prev) => [...prev, msgInfo]);\r\n    }\r\n\r\n    const connect = () => {\r\n        stompClient.connect({}, () => {\r\n            stompClient.subscribe('/sub/chat/' + room_id, onMessageHandler);\r\n            sendMessage(\"Enter\");\r\n        });\r\n    }\r\n\r\n    const disconnect= (e) => {\r\n        sendMessage(\"Exit\");\r\n        stompClient.disconnect();\r\n    }\r\n\r\n    const sendMessage = (msg_type) => {\r\n        let msg;\r\n        switch (msg_type){\r\n            case \"Enter\":\r\n               msg = user.authInfo.name + '님이 입장하셨습니다.' ;\r\n               break;\r\n            case \"Exit\":\r\n                msg = user.authInfo.name + '님이 퇴장하셨습니다.' ;\r\n                break;\r\n            case \"Message\":\r\n                msg = Chat ;\r\n                break; \r\n            default:\r\n                msg = '';\r\n        }\r\n\r\n        stompClient.send('/pub/chat/' + room_id, {}, JSON.stringify({\r\n            msg_type : msg_type,\r\n            user_id : user.authInfo.id,\r\n            user_name : user.authInfo.name,\r\n            message : msg\r\n            })\r\n        )\r\n    }\r\n    useEffect(() => {\r\n        //window.addEventListener('popstate', disconnect);\r\n        window.addEventListener('beforeunload', disconnect);\r\n        connect();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n        {ChatList && ChatList.map((chat, index) => {\r\n            return (<div>\r\n                <text>{index + ' ' + chat.user_name + ' ' + chat.message}</text>\r\n                </div>)\r\n        })}\r\n        </div>\r\n        <div style={{\r\n            display : 'flex', justifyContent : 'center',\r\n            alignItems : 'center', width : '100%'\r\n        }}>\r\n            <InputGroup className=\"mb-3\">\r\n                <FormControl\r\n                    placeholder=\"Recipient's username\"\r\n                    aria-label=\"Recipient's username\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                    value={Chat}\r\n                    onChange={onChatHandler}\r\n                />\r\n            <InputGroup.Append>\r\n                <Button variant=\"outline-secondary\" onClick={onSubmitHandler}>Button</Button>\r\n            </InputGroup.Append>\r\n        </InputGroup>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatRoom;","C:\\Users\\LEE\\Desktop\\chat\\client\\src\\components\\FaceChatPage.js",["71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":5,"column":13,"nodeType":"78","messageId":"79","endLine":5,"endColumn":19},{"ruleId":"80","severity":1,"message":"81","line":1,"column":31,"nodeType":"82","messageId":"83","endLine":1,"endColumn":37},{"ruleId":"80","severity":1,"message":"84","line":1,"column":39,"nodeType":"82","messageId":"83","endLine":1,"endColumn":50},{"ruleId":"80","severity":1,"message":"85","line":4,"column":28,"nodeType":"82","messageId":"83","endLine":4,"endColumn":39},{"ruleId":"86","severity":1,"message":"87","line":32,"column":12,"nodeType":"88","endLine":32,"endColumn":14,"suggestions":"89"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":37,"nodeType":"82","messageId":"83","endLine":1,"endColumn":43},{"ruleId":"80","severity":1,"message":"90","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":20},{"ruleId":"80","severity":1,"message":"91","line":15,"column":12,"nodeType":"82","messageId":"83","endLine":15,"endColumn":17},{"ruleId":"86","severity":1,"message":"92","line":79,"column":8,"nodeType":"88","endLine":79,"endColumn":10,"suggestions":"93"},{"ruleId":"80","severity":1,"message":"94","line":5,"column":10,"nodeType":"82","messageId":"83","endLine":5,"endColumn":25},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'FormControl' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["97"],"'SockJsClient' is defined but never used.","'Users' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'connect' and 'disconnect'. Either include them or remove the dependency array.",["98"],"'matchDimensions' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"103","text":"104"},"Update the dependencies array to be: [connect, disconnect]",{"range":"105","text":"106"},[1059,1061],"[dispatch, props.history]",[2510,2512],"[connect, disconnect]"]